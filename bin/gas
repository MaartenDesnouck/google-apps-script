#!/usr/bin/env node

var package = require('../package.json');
var program = require('commander');
var path = require('path');
var lib = path.join(__dirname, '../lib');

program
    .version(package.version);

program
    .command('auth')
    .option('-f, --force', 'Force reauthentication')
    .option('-s, --show-url', 'Show the authentication url instead opening a webbrowser')
    .description('authenticate to the Google APIs')
    .action(require(lib + '/auth'));

program
    .command('clone <scriptTitle|scriptId>')
    .description('create a new local folder, link the remote script with the given scriptId and do a pull from remote all in one')
    .action(require(lib + '/clone'));

program
    .command('include')
    .alias('i')
    .option('-s, --save <dependency>', 'save the specified dependency package in gas-include.json')
    .description('[BETA] locally add included files specified in \'gas-include.json\'')
    .action(require(lib + '/include'));

program
    .command('init')
    .description('interactively configure a package.json file')
    .action(require(lib + '/init'));

program
    .command('new <scriptTitle>')
    .description('create a new remote Google Apps Script and then clone that script locally')
    .action(require(lib + '/new'));

program
    .command('link <scriptTitle|scriptId>')
    .description('link the remote script with the given scriptId to the current local folder')
    .action(require(lib + '/link'));

program
    .command('open [scriptTitle|scriptId]')
    .description('open the script linked to the current folder or a specified script in the online editor')
    .action(require(lib + '/open'));

program
    .command('pull [fileName]')
    .description('pull the remote version of the linked Google Apps Script, (add \'-i\' to also pull included files)')
    .action(require(lib + '/pull'));

program
    .command('publish')
    .description('[BETA] publish a library script to gas-include')
    .action(require(lib + '/publish'));

program
    .command('push [fileName]')
    .option('-d, --delete', 'Delete the specified file from the linked remote script')
    .description('push your local code to the linked remote script (add a fileName to only pull that file)')
    .action(require(lib + '/push'));

program
    .command('rename <scriptTitle|scriptId> <newScriptTitle>')
    .description('rename a remote script')
    .action(require(lib + '/rename-script'));

program
    .command('run [scriptTitle|scriptId]')
    .option('-f, --function', '')
    .description('run a function in your remote script')
    .action(require(lib + '/run'));

program
    .command('show [scriptTitle|scriptId]')
    .alias('info')
    .description('display info about the script linked to the current folder or about a specified script')
    .action(require(lib + '/show'));

program
    .command('status')
    .description('display the status of your local files')
    .action(require(lib + '/status'));

program
    .command('unlink')
    .description('unlink the remote script linked to the current folder')
    .action(require(lib + '/unlink'));

program
    .command('config [path]')
    .option('-e, --export', 'Export a config file to the specified location')
    .option('-i, --import', 'Import a specified config file')
    .option('-r, --reset', 'Reset the config to default values')
    .description('configure gas to use .gs instead of .js or to use a custom OAuth client')
    .action(require(lib + '/config'));

program
    .command('get', '\'gas get\' subcommand, execute \'gas get -h\' for more info')

program
    .command('delete', '\'gas delete\' subcommand, execute \'gas delete -h\' for more info')

program
    .command('create', '\'gas create\' subcommand, execute \'gas create -h\' for more info')
    .parse(process.argv);

program.on('--help', function () {
    console.log('');
    console.log('  Examples:');
    console.log('');
    console.log('    $ gas new myScript');
    console.log('    $ cd myScript');
    console.log('    $ gas open');
    console.log('');
    console.log('    $ gas get scripts');
    console.log('    $ gas clone myScript');
    console.log('');
    console.log('    $ mkdir src');
    console.log('    $ cd src');
    console.log('    $ gas create myScript2');
    console.log('    $ gas link myScript');
    console.log('    $ gas info');
    console.log('    $ gas pull');
    console.log('');
});
